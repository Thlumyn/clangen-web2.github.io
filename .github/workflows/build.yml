name: PyInstaller build

on: [workflow_dispatch]

permissions:
  contents: write

jobs:
  build_ubuntu_latest:
    runs-on: ubuntu-latest
    env:
      gpg_private_key: ${{ secrets.PACKAGESIGNKEY }}
      gpg_private_key_passphrase: ${{ secrets.PACKAGESIGNKEYPASSPHRASE }}
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.1
      - name: Setup Python 3.11 x64
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: "x64"
          cache: "poetry"
      - name: install dependencies
        run: poetry install --with build -E discord
      - name: Configure version
        run: |
          echo "VERSION_NUMBER=${{ github.sha }}" >> $GITHUB_ENV
          echo "RELEASE_CHANNEL=${{ vars.DEVELOPMENT_RELEASE_CHANNEL }}" >> $GITHUB_ENV
      - name: Write version file
        run: |
          echo "[DEFAULT]" > version.ini
          echo "version_number=${{ env.VERSION_NUMBER }}" >> version.ini
          echo "release_channel=${{ env.RELEASE_CHANNEL }}" >> version.ini
      - name: Write commit file
        run: |
          git log --pretty=oneline -15 --no-decorate  --no-merges > changelog.txt
      - name: Run PyInstaller
        run: poetry run python3 -m PyInstaller Clangen.spec
      - name: Create archive (.tar.xz)
        run: tar -caf Clangen_Linux64_glibc2.35+.tar.xz -C dist Clangen
      - uses: actions/upload-artifact@v3
        with:
          name: Clangen_Linux64_glibc2.35+.tar.xz
          path: Clangen_Linux64_glibc2.35+.tar.xz
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        if: ${{ env.gpg_private_key != '' && env.gpg_private_key_passphrase != '' }}
        with:
          gpg_private_key: ${{ secrets.PACKAGESIGNKEY }}
          passphrase: ${{ secrets.PACKAGESIGNKEYPASSPHRASE }}
      - name: Pybag setup
        run: |
          python3 -m pip install pygbag
          python3 -m pygbag --ume_block 0 --build $GITHUB_WORKSPACE/main.py
          cp convert.html build/web/
          cp converter.js build/web/
          cp techsupport.html build/web/
      - name : "Upload to GitHub pages"
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: build/web
